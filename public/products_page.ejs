<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products</title>
    <link rel = "stylesheet" href="/styles.css">
</head>
<body>
    <header class="header">
        
        <img src="/images/kpi-big-logo.png" class = "kpi_logo header_part" alt="kpi-logo">
        
        <div class="header_part">
            <ul class="menu_header_list">
                <li><a href="/" class="menu_li">Головна сторінка</a></li>
                <li><a href="/prodaction_plan_page" class="menu_li">План виробництва</a></li>
                <li><a href="/products_page" class="menu_li active_menu_li">Про продукцію</a></li>
                <li><a href="/orders_page" class="menu_li">Замовлення</a></li>
                <li><a href="/customers_page" class="menu_li">Замовники</a></li>
                <li><a href="/about_page" class="menu_li">Інформація</a></li>
            </ul>
        </div>
    </header>

    <section class = "introduction">
        <div class="background">
            <h2 class="title ">Продукція</h2>
            <div class="conteiner_for_table">
                <table class="output_table">
                    <tr class="table_row first_row"> 
                        <th class="subtitle cell">Назва</th>
                        <th class="subtitle cell">Короткий опис</th>
                        <th class="subtitle cell">Ціна (шт.)</th>
                        <th class="subtitle cell"></th>
                        <th class="subtitle cell"></th>
                    </tr>

                    <% production.forEach(prod => { %>
                    <tr class="table_row" data-id="<%= prod.Id %>">    
                        <td class="no_main_text cell"><%= prod.Product_name %></td>
                        <td class="no_main_text cell"><%= prod.Product_description %></td>
                        <td class="no_main_text cell"><%= prod.Price %></td>
                        <td><img src="/images/edit_icon.png" class="icon_in_table edit_button" alt="edit icon"></td>
                        <td><img src="/images/delete_icon.png" class="icon_in_table delete_button" alt="delete icon" title="Видалити рядок" data-id="<%= prod.Id %>"></td>
                    </tr>
                    <% }); %>
                </table>    

                <button id="add_to_table_button" class="add_to_table no_main_text">Додати продукцію</button>
            </div>
            

            <div class="overlay hidden" id="editOverlay"></div>
                <div id="editFormContainer" class="form-container hidden">
                    <form id="editPlanForm" action="/products_page/edit" method="POST">
                        <button type="button" class="form_close_button" id="closeEditFormButton">X</button>
                        
                        <input type="hidden" id="editId" name="id">
                        
                        <div class="form_lable_input">
                            <label for="editProductName">Назва:</label>
                            <input type="text" class="form_input" id="editProductName" name="productName" required><br>
                        </div>
    
                        <div class="form_lable_input">
                            <label for="editProductDescription">Опис:</label>
                            <input type="text" class="form_input" id="editProductDescription" name="productDescription" required><br>
                        </div>
    
                        <div class="form_lable_input">
                            <label for="editProductPrice">Ціна:</label>
                            <input type="number" class="form_input" id="editProductPrice" name="productPrice" required><br>
                        </div>
                        
                        <div class="form_button_wrapper">
                            <button type="submit" class="form_add_button">Зберегти</button>
                        </div>
                    </form>
                </div>

            <div class="overlay hidden" id="overlay"></div>
  
            <div id="addFormContainer" class="form-container hidden">
                <form id="addProductForm" action="/production_plan_page/add" method="POST">
                    <button type="button" class="form_close_button" id="closeFormButton">X</button>
                    <div class="form_lable_input">
                        <label for="productName">Назва:</label>
                        <input type="text" class="form_input" id="productName" name="productName" required><br>
                    </div>

                    <div class="form_lable_input">
                        <label for="productName">Опис:</label>
                        <input type="text" class="form_input" id="productDescription" name="productDescription" required><br>
                    </div>

                    <div class="form_lable_input">
                        <label for="productName">Ціна:</label>
                        <input type="number" class="form_input" id="productPrice" name="productPrice" required><br>
                    </div>

                    <div class="form_button_wrapper">
                        <button type="submit" class="form_add_button">Додати</button>
                    </div>
                </form>
            </div>

        </div>
    </section>

    <footer>
        <div class="last_text_midle">
            © 2024 Maria Larina's Course Work
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addProductButton = document.getElementById('add_to_table_button');
            const addFormContainer = document.getElementById('addFormContainer');
            const overlay = document.getElementById('overlay');
            const closeFormButton = document.getElementById('closeFormButton');

            function openForm() {
                addFormContainer.classList.remove('hidden');
                overlay.classList.remove('hidden');
            }

            function closeForm() {
                addFormContainer.classList.add('hidden');
                overlay.classList.add('hidden');
                location.reload();
            }

            addProductButton.addEventListener('click', openForm);
            closeFormButton.addEventListener('click', closeForm);
            overlay.addEventListener('click', closeForm);

            const addProductForm = document.getElementById('addProductForm');

            addProductForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const formData = new FormData(addProductForm);
                const data = Object.fromEntries(formData.entries());

                try {
                    const response = await fetch('/products_page/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    if (response.ok) {
                        alert('Product added sucsessfully');
                        closeForm();
                        location.reload();
                    } else {
                        alert('Error! Product didn`t added');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error in adding product');
                }
            });
        });



        // Edit form handling
        document.addEventListener('DOMContentLoaded', () => {
            const editButtons = document.querySelectorAll('.edit_button');
            const editFormContainer = document.getElementById('editFormContainer');
            const editOverlay = document.getElementById('editOverlay');
            const closeEditFormButton = document.getElementById('closeEditFormButton');
            const editPlanForm = document.getElementById('editPlanForm');

            function openEditForm() {
                editFormContainer.classList.remove('hidden');
                editOverlay.classList.remove('hidden');
            }

            function closeEditForm() {
                editFormContainer.classList.add('hidden');
                editOverlay.classList.add('hidden');
                location.reload();
            }

            editButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    openEditForm();
                    const rowId = event.target.closest('tr').dataset.id; //==production.Id
                    console.log(rowId);
                    try {
                        const response = await fetch(`/products_page/${rowId}`);
                        console.log(response);
                        if (!response.ok) throw new Error('Network response was not ok');
                        const productArray  = await response.json(); // array with all information
                        console.log(productArray);
                        if (productArray.length > 0) {
                            const product = productArray[0];  
                            if (product) {
                                document.getElementById('editId').value = rowId;
                                document.getElementById('editProductName').value = product.Product_name || '';
                                document.getElementById('editProductDescription').value = product.Product_description || '';
                                document.getElementById('editProductPrice').value = product.Price || '';
                            } else {
                                throw new Error('Invalid product');
                            }   
                        } else {
                            throw new Error('No product found');
                        }
                    } catch (error) {
                        console.error('Error fetching product details:', error);
                        alert('Error fetching product details');        
                    }
                });
            });

            closeEditFormButton.addEventListener('click', closeEditForm);

            editPlanForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(editPlanForm);
                const data = Object.fromEntries(formData.entries());

                try {
                    const response = await fetch('/products_page/update', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });
                    if (response.ok) {
                        alert('Product row updated successfully');
                        closeEditForm();
                        location.reload();
                    } else {
                        alert('Error! Product row did not update');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error in updating product row');
                }
            });
        });

        // Delete row handling
        document.addEventListener('DOMContentLoaded', () => {
            const deleteButtons = document.querySelectorAll('.delete_button');

            deleteButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    const rowId = event.target.dataset.id;
                    const confirmation = confirm('Are you sure you want to delete this row?');
                    
                    if (confirmation) {
                        try {
                            const response = await fetch(`/products_page/delete/${rowId}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                            });

                            if (response.ok) {
                                alert('Row deleted successfully');
                                location.reload();
                            } else {
                                alert('Error! Row did not delete');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Error in deleting row');
                        }
                    }
                });
            });
        });
    </script>
</body>
</html>
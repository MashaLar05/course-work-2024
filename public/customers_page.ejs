<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customers</title>
    <link rel = "stylesheet" href="/styles.css">
</head>
<body>
    <header class="header">
        
        <img src="/images/kpi-big-logo.png" class = "kpi_logo header_part" alt="kpi-logo">
        
        <div class="header_part">
            <ul class="menu_header_list">
                <li><a href="/" class="menu_li">Головна сторінка</a></li>
                <li><a href="/prodaction_plan_page" class="menu_li">План виробництва</a></li>
                <li><a href="/products_page" class="menu_li">Про продукцію</a></li>
                <li><a href="/orders_page" class="menu_li">Замовлення</a></li>
                <li><a href="/customers_page" class="menu_li active_menu_li">Замовники</a></li>
                <li><a href="/about_page" class="menu_li">Інформація</a></li>
            </ul>
        </div>
    </header>

    <section class = "introduction">
        <div class="background">
            <h2 class="title ">Замовники</h2>
            <div class="conteiner_for_table">
                <table class="output_table">
                    <tr class="table_row first_row"> 
                        <th class="subtitle cell">ПІБ</th>
                        <th class="subtitle cell">Email</th>
                        <th class="subtitle cell">Номер телефона</th>
                        <th class="subtitle cell"></th>
                        <th class="subtitle cell"></th>
                    </tr>

                    <% customer.forEach(cust => { %>
                    <tr class="table_row" data-id="<%= cust.Id %>">    
                        <td class="no_main_text cell"><%= cust.Customer_name %></td>
                        <td class="no_main_text cell"><%= cust.Email %></td>
                        <td class="no_main_text cell"><%= cust.Phone %></td>
                        <td><img src="/images/edit_icon.png" class="icon_in_table edit_button" alt="edit icon"></td>
                        <td><img src="/images/delete_icon.png" class="icon_in_table delete_button" alt="delete icon" title="Видалити рядок" data-id="<%= cust.Id %>"></td>
                    </tr>
                    <% }); %>
                </table>    

                <button id="add_to_table_button" class="add_to_table no_main_text">Додати замовника</button>
            </div>

            
            <div class="overlay hidden" id="editOverlay"></div>
                <div id="editFormContainer" class="form-container hidden">
                    <form id="editPlanForm" action="/products_page/edit" method="POST">
                        <button type="button" class="form_close_button" id="closeEditFormButton">X</button>
                        
                        <input type="hidden" id="editId" name="id">
                        
                        <div class="form_lable_input">
                            <label for="editcustomerName">ПІБ Замовника:</label>
                            <input type="text" class="form_input" id="editcustomerName" name="customerName" required><br>
                        </div>
    
                        <div class="form_lable_input">
                            <label for="editcustomerEmail">Email:</label>
                            <input type="email" class="form_input" id="editcustomerEmail" name="customerEmail" required><br>
                        </div>
    
                        <div class="form_lable_input">
                            <label for="editcustomerPhone">Номер телефона:</label>
                            <input type="tel" class="form_input" id="editcustomerPhone" name="customerPhone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}" placeholder="123-456-78-90" required><br>
                        </div>
                        
                        <div class="form_button_wrapper">
                            <button type="submit" class="form_add_button">Зберегти</button>
                        </div>
                    </form>
                </div>


            <div class="overlay hidden" id="overlay"></div>
  
            <div id="addFormContainer" class="form-container hidden">
                <form id="addCustomerForm" action="/production_plan_page/add" method="POST">
                    <button type="button" class="form_close_button" id="closeFormButton">X</button>

                    <div class="form_lable_input">
                        <label for="customerName">ПІБ Замовника:</label>
                        <input type="text" class="form_input" id="customerName" name="customerName" required><br>
                    </div>

                    <div class="form_lable_input">
                        <label for="customerEmail">Email:</label>
                        <input type="email" class="form_input" id="customerEmail" name="customerEmail" required><br>
                    </div>

                    <div class="form_lable_input">
                        <label for="customerPhone">Номер телефона:</label>
                        <input type="tel" class="form_input" id="customerPhone" name="customerPhone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}" placeholder="123-456-78-90" required><br>
                    </div>

                    <div class="form_button_wrapper">
                        <button type="submit" class="form_add_button">Додати</button>
                    </div>
                </form>
            </div>

        </div>
    </section>

    <footer>
        <div class="last_text_midle">
            © 2024 Maria Larina's Course Work
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addProductButton = document.getElementById('add_to_table_button');
            const addFormContainer = document.getElementById('addFormContainer');
            const overlay = document.getElementById('overlay');
            const closeFormButton = document.getElementById('closeFormButton');

            function openForm() {
                addFormContainer.classList.remove('hidden');
                overlay.classList.remove('hidden');
            }

            function closeForm() {
                addFormContainer.classList.add('hidden');
                overlay.classList.add('hidden');
                location.reload();
            }

            addProductButton.addEventListener('click', openForm);
            closeFormButton.addEventListener('click', closeForm);
            overlay.addEventListener('click', closeForm);

            const addCustomerForm = document.getElementById('addCustomerForm');

            addCustomerForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const formData = new FormData(addCustomerForm);
                const data = Object.fromEntries(formData.entries());

                try {
                    const response = await fetch('/customers_page/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    if (response.ok) {
                        alert('Customer added sucsessfully');
                        closeForm();
                        location.reload();
                    } else {
                        alert('Error! Customer didn`t added');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error in adding customer');
                }
            });
        });

                // Edit form handling
                document.addEventListener('DOMContentLoaded', () => {
            const editButtons = document.querySelectorAll('.edit_button');
            const editFormContainer = document.getElementById('editFormContainer');
            const editOverlay = document.getElementById('editOverlay');
            const closeEditFormButton = document.getElementById('closeEditFormButton');
            const editPlanForm = document.getElementById('editPlanForm');

            function openEditForm() {
                editFormContainer.classList.remove('hidden');
                editOverlay.classList.remove('hidden');
            }

            function closeEditForm() {
                editFormContainer.classList.add('hidden');
                editOverlay.classList.add('hidden');
                location.reload();
            }

            editButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    openEditForm();
                    const rowId = event.target.closest('tr').dataset.id; //==production.Id
                    console.log(rowId);
                    try {
                        const response = await fetch(`/customers_page/${rowId}`);
                        console.log(response);
                        if (!response.ok) throw new Error('Network response was not ok');
                        const customersArray  = await response.json(); // array with all information
                        console.log(customersArray);
                        if (customersArray.length > 0) {
                            const customer = customersArray[0];  
                            if (customer) {
                                document.getElementById('editId').value = rowId;
                                document.getElementById('editcustomerName').value = customer.Customer_name || '';
                                document.getElementById('editcustomerEmail').value = customer.Email || '';
                                document.getElementById('editcustomerPhone').value = customer.Phone || '';
                            } else {
                                throw new Error('Invalid customer');
                            }   
                        } else {
                            throw new Error('No customer found');
                        }
                    } catch (error) {
                        console.error('Error fetching customer details:', error);
                        alert('Error fetching customer details');        
                    }
                });
            });

            closeEditFormButton.addEventListener('click', closeEditForm);

            editPlanForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(editPlanForm);
                const data = Object.fromEntries(formData.entries());

                try {
                    const response = await fetch('/customers_page/update', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });
                    if (response.ok) {
                        alert('Customer row updated successfully');
                        closeEditForm();
                        location.reload();
                    } else {
                        alert('Error! Customer row did not update');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error in updating customer row');
                }
            });
        });

        // Delete row handling
        document.addEventListener('DOMContentLoaded', () => {
            const deleteButtons = document.querySelectorAll('.delete_button');

            deleteButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    const rowId = event.target.dataset.id;
                    const confirmation = confirm('Are you sure you want to delete this row?');
                    
                    if (confirmation) {
                        try {
                            const response = await fetch(`/customers_page/delete/${rowId}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                            });

                            if (response.ok) {
                                alert('Row deleted successfully');
                                location.reload();
                            } else {
                                alert('Error! Row did not delete');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Error in deleting row');
                        }
                    }
                });
            });
        });

    </script>

</body>
</html>